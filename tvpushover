#!/usr/bin/env ruby

require 'httparty'
require 'ostruct'

load File.join(File.expand_path(File.dirname(__FILE__)), 'pmsg')


def format_time t
  time = Time.parse(t) - (1*60*60) # minus one hour because SB doesn't handle timezones
  time.strftime("%l:%M%P").strip
end

token = ENV['SICKBEARD_API_TOKEN']
abort "ENV['SICKBEARD_API_TOKEN'] isn't set" unless token
url = "http://bmjones.com:8082/api/#{token}/?cmd=future&sort=date&type=today"
query = HTTParty.get(url).parsed_response
data = query['data']

abort "FAILED calling SickBeard API => #{data['message']}" unless query['result'] == "success"
exit 0 unless data['today'] and data['today'].any? # Nothing on today

message = data['today'].map do |item| 
	show = OpenStruct.new item
	show.airs = format_time(show.airs.match(/\d+\:\d+\s*(AM|PM)/).to_s)
	"- #{show.show_name} S#{show.season}E#{show.episode} at #{show.airs} on #{show.network}" 
end.join("\n")

PushoverMsg.new.notify("New shows today", message)
